<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gogo.crm.dao.IUserDao">

    <resultMap id="userMap" type="User">
        <result property="id" column="id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="email" column="email" />
        <result property="age" column="age" />
        <result property="sex" column="sex" />
        <result property="input_time" column="inputTime" />
        <result property="status" column="status" />
        <result property="loginIp" column="login_ip" />
        <result property="loginTime" column="login_time" />
        <result property="lastLoginIp" column="last_login_ip" />
        <result property="lastLoginTime" column="last_login_time" />
    </resultMap>

    <sql id="columnList">
        username,password,email,age,sex,input_time,status,login_ip,login_time,last_login_ip,last_login_time
    </sql>

    <sql id="columnWhere">
        <if test = "username != null">
            and username = #{username}
        </if>
        <if test = "password != null">
            and password = #{password}
        </if>
        <if test = "email != null">
            and email = #{email}
        </if>
        <if test = "age!= null">
            and age = #{age}
        </if>
        <if test = "sex != null">
            and sex = #{sex}
        </if>
        <if test = "inputTime != null">
            and input_time = #{inputTime}
        </if>
        <if test = "status != null">
            and status = #{status}
        </if>
        <if test = "loginIp != null">
            and login_ip = #{loginIp}
        </if>
        <if test = "loginTime != null">
            and login_time = #{loginTime}
        </if>
        <if test = "lastLoginIp != null">
            and last_login_ip = #{lastLoginIp}
        </if>
        <if test = "lastLoginTime != null">
            and last_login_time = #{lastLoginTime}
        </if>
    </sql>

    <sql id="columnUpdate">
        <if test = "username != null">
            username = #{username}
        </if>
        <if test = "password != null">
            ,password = #{password}
        </if>
        <if test = "email != null">
            ,email = #{email}
        </if>
        <if test = "age!= null">
            ,age = #{age}
        </if>
        <if test = "sex != null">
            ,sex = #{sex}
        </if>
        <if test = "inputTime != null">
            ,input_time = #{inputTime}
        </if>
        <if test = "status != null">
            ,status = #{status}
        </if>
        <if test = "loginIp != null">
            ,login_ip = #{loginIp}
        </if>
        <if test = "loginTime != null">
            ,login_time = #{loginTime}
        </if>
        <if test = "lastLoginIp != null">
            ,last_login_ip = #{lastLoginIp}
        </if>
        <if test = "lastLoginTime != null">
            ,last_login_time = #{lastLoginTime}
        </if>
    </sql>

    <select id="getById" parameterType="int" resultMap="userMap">
        select <include refid="columnList" /> from user where id = #{id}
    </select>

    <delete id="deleteById" parameterType="int">
        delete from user where id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="string">
        delete from user where id in
        <foreach collection="list" item="list" open="(" close=")" separator=",">
            #{list}
        </foreach>
    </delete>

    <update id="update" parameterType="User">
        update user
        <set>
            <include refid="columnUpdate" />
        </set>
        where id = #{id}
    </update>

    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into user(<include refid="columnList" />)
        values(#{username},#{password},#{email},#{age},#{sex},#{inputTime},#{status},#{loginIp},#{loginTime},#{lastLoginIp},#{lastLoginTime})
    </insert>

    <select id="getByCondition" parameterType="map" resultMap="userMap">
        select id,<include refid="columnList" />
        from user
        <where>
           <include refid="columnWhere" />
        </where>
        <if test="sort != null and sort == true">
            order by id desc
        </if>
        <if test="currentPage != null and pageSize != null">
            limit #{currentPage},#{pageSize}
        </if>
    </select>
    
    <select id="getCountByCondition" parameterType="map" resultType="int">
        select count(1) from user
        <where>
           <include refid="columnWhere" />
        </where>
    </select>
</mapper>